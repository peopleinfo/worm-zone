!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";function e(e){const o=(new TextEncoder).encode(e);let r="";for(let e=0;e<o.length;e++)r+=String.fromCharCode(o[e]);return btoa(r)}const o=new class{constructor(){this.callbacks={},this.init()}init(){window._nativeCallback=e=>{console.log("paramsBack",e);const o=e.replace(/\n/g,"\\n"),{callbackId:r,params:l,data:s}=JSON.parse(o);console.log(r,l);const a=s||l,n=this.callbacks[r];n?(n(a,a.errorMsg),delete this.callbacks[r]):console.log("Callback not found:",r)}}callNative(e,o){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>{};const l=this.generateCallbackId();this.callbacks[l]=r;const s={action:e,params:o,callbackId:l};this.sendMessageToNative(s)}generateCallbackId(){const e=Math.random().toString(36).substr(2,9);return this.callbacks[e]?this.generateCallbackId():e}sendMessageToNative(e){const{action:o,params:r,callbackId:l}=e,s=JSON.stringify({callbackId:l,params:r});if(console.log("params",o,s),a=navigator.userAgent||navigator.vendor||window.opera,/iPad|iPhone|iPod/.test(a)&&!window.MSStream){if(!(window.webkit&&window.webkit.messageHandlers&&window.webkit.messageHandlers[o]))throw new Error("Native bridge is not available.");window.webkit.messageHandlers[o].postMessage(s)}else Mos[o](s);var a}};window.mos={login:e=>new Promise(((r,l)=>{o.callNative("getWebLoginCode",{appKey:e},((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))})),createWallet:()=>new Promise(((e,r)=>{o.callNative("setRegisterWallet",{},((o,l)=>{l?(console.error("Error:",l),r(l)):(console.log("Result:",o),e(o))}))})),verifyKYC:()=>new Promise(((e,r)=>{o.callNative("setWalletKyc",{},((o,l)=>{l?(console.error("Error:",l),r(l)):(console.log("Result:",o),e(o))}))})),shareToApp:e=>new Promise(((r,l)=>{o.callNative("shareToApp",{content:e},((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))})),getSign:()=>new Promise(((e,r)=>{o.callNative("getSign",{},((o,l)=>{l?(console.error("Error:",l),r(l)):(console.log("Result:",o),e(o))}))})),setShareLink:e=>new Promise(((r,l)=>{o.callNative("setShareLink",{link:e},((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))})),getLanguage:()=>new Promise(((e,r)=>{o.callNative("getLanguage",{},((o,l)=>{l?(console.error("Error:",l),r(l)):(console.log("Result:",o),e(o))}))})),getUserInfo:e=>new Promise(((r,l)=>{o.callNative("getUserInfo",{authorizedDesc:e},((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))})),getUserContactInfo:e=>new Promise(((r,l)=>{o.callNative("getUserContactInfo",{authorizedDesc:e},((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))})),pay:e=>new Promise(((r,l)=>{o.callNative("pay",e,((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))})),cardRecharge:e=>new Promise(((r,l)=>{o.callNative("cardRecharge",e,((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))})),cardApplyPay:e=>new Promise(((r,l)=>{o.callNative("cardApplyPay",e,((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))})),getWindowInfo:e=>new Promise(((r,l)=>{o.callNative("getWindowInfo",e,((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))})),setStatusbar:e=>new Promise(((r,l)=>{o.callNative("setStatusbar",e,((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))})),shareMiniApp:r=>new Promise(((l,s)=>{try{r.query&&(r.query=e(JSON.stringify(r.query)))}catch(e){console.error("编码异常 Error:",e)}o.callNative("shareMiniApp",r,((e,o)=>{o?(console.error("Error:",o),s(o)):(console.log("Result:",e),l(e))}))})),shareMiniAppData:r=>new Promise(((l,s)=>{try{r.query&&(r.query=e(JSON.stringify(r.query)))}catch(e){console.error("编码异常 Error:",e)}o.callNative("shareMiniAppData",r,((e,o)=>{o?(console.error("Error:",o),s(o)):(console.log("Result:",e),l(e))}))})),getLaunchOptions:()=>new Promise(((e,r)=>{o.callNative("getLaunchOptions",{},((o,l)=>{if(l)console.error("Error:",l),r(l);else{console.log("Result:",o);try{o.query&&(o.query=JSON.parse((s=o.query,atob(s))))}catch(l){console.error("解码异常 Error:",l)}e(o)}var s}))})),getPayOpenid:e=>new Promise(((r,l)=>{o.callNative("getPayOpenid",e,((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))})),folderLinkClick:e=>new Promise(((r,l)=>{o.callNative("folderLinkClick",e,((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))})),makePhoneCall:e=>new Promise(((r,l)=>{"string"!=typeof e&&"number"!=typeof e||(e={phoneNumber:e}),o.callNative("makePhoneCall",e,((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))})),scanCode(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return new Promise(((r,l)=>{o.callNative("scanCode",e,((e,o)=>{o?(console.error("Error:",o),l(o)):(console.log("Result:",e),r(e))}))}))}}}));
